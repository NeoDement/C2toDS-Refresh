

enum 1 29 50200
	kill targ
next


*do all TODO:s and add window automove on screen size.
*also maybe opening quit menu (and some others) auto-closes it.
*or instead maybe it just auto-closes when the game detects it has been closed/re-opening a world?
*and we need a button to open it in the first place!
*and a few more sanity checks - what does it do if the genome doesn't exist!?

*vvvvv
*When you left click should be when it sets OV99! (or ov99 may not even be necessary).
*the point is, it often grabs the egg behind the one with the sex symbol over it when left clicking. the sex symbol is obviously meant to indicate which egg is highlighted so this is no good.
*^^^^^ you were halfway thru fixing this one

*(either way, setting the highlighted egg in the raw mouse move script doesnt seem reliable)
*The sex symbol anim resets whenever the mouse moves. It needs to not do that.

*todo: see about renaming Hebe to Desert if it doesn't get the correct ID (might not be needed)

*todo: pressing ALT or WINDOWS KEY (for alt tab) should also detach the window from the cursor!


*todo: nasty crashes to do with non-existant parts if the hatchery ever throws an error and desyncs the egg data objects with the egg parts
*look into this one... the timer script can cause it i think


*todo: the weather toolbar temp sometimes draws above parts of the hatchery.






*todo: fix this up so no minus coordinates are needed in the .c2egg files
*todo: also make it so a width or height of -1 means random?
setv game "C2toDS_Hatchery_Nest_X" 86
setv game "C2toDS_Hatchery_Nest_Y" 158

setv game "C2toDS_Hatchery_EggShadow_OffsetX" 14
setv game "C2toDS_Hatchery_EggShadow_OffsetY" 60



*todo: move this variable to the toolbar-that-opens-kits, when such a toolbar exists.
setv game "C2toDS_Hatchery_OpenedForFirstTime" 0


*1 29 50200 - hatchery window (comp)
*1 29 50201 - egg data holder (simp)









*essential variables
*todo: could expose more of these and allow defining skins in a simple txt file.

setv game "C2toDS_Hatchery_TitleBar_X" 8
setv game "C2toDS_Hatchery_TitleBar_Y" 4
setv game "C2toDS_Hatchery_TitleBar_Width" 307
setv game "C2toDS_Hatchery_TitleBar_Height" 25

setv game "C2toDS_Hatchery_QuitButton_X" 315
setv game "C2toDS_Hatchery_QuitButton_Y" 4
setv game "C2toDS_Hatchery_QuitButton_Width" 26
setv game "C2toDS_Hatchery_QuitButton_Height" 25

setv game "C2toDS_Hatchery_ResetButton_X" 14
setv game "C2toDS_Hatchery_ResetButton_Y" 32
setv game "C2toDS_Hatchery_ResetButton_Width" 63
setv game "C2toDS_Hatchery_ResetButton_Height" 21



* Hatchery Panel - Comp
*plane 9024, 51 below Quit dialog

*part 0 - background image
*new: comp 1 29 50200 "moe_C2toDS_Hatchery" 1 0 9024
new: comp 1 29 50200 "moe_C2toDS_Hatchery" 1 0 9000





*hatchery creation script

scrp 1 29 50200 10

	lock
	inst

*attr from Quit dialog

*Camera Shy + Floatable + Invisible
*256+32+16
	attr 304

*todo: PROBABLY allow right clicking to pick it up. will need a variable to check if it's already being held so you can't double hold it and cause issues.
*will also need a puhl.
*+2 pick up?
*attr 306



*todo: delete and recomment a bit
*listen for Raw Mouse Move and Raw Mouse Down inputs
*imsk 12

*listen for Raw Mouse Move and Raw Mouse Down inputs (12)
*AND for mouse up/unpress events (+16)
	imsk 28

*AND for raw key down events (+1)
	imsk 29
*todo: make use of this ^


*todo: i hate this
*need to tick once every other frame frame to keep track of the sex symbol anim frame!
	tick 2

*part 1 - claw overlay
	pat: dull 1 "moe_C2toDS_Hatchery" 1 0 0 51

*part 2 - glass overlay (50% transparency)
	pat: dull 2 "moe_C2toDS_Hatchery" 2 0 0 51

*set glass to 50% transparency
	part 2
	alph 128 1


*part 3 - selected egg marker/egg sex symbol
	pat: dull 3 "moe_C2toDS_Hatchery" 0 0 0 52


*set C2 framerate (not needed because we're manually animating it in the tick event)
	part 3
*	frat 2

*the 4 sexes:
*4 NONE (used whenever an egg isnt selected, its a blank image)
*5 unknown
*21 female
*37 male

*so base 4 by default.
	base 4
	pose 0


*animate forever
*	anim [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 255]


*part 4 - X button
*pat: butt 4 "moe_C2toDS_Hatchery" 56 1 game "C2toDS_Hatchery_QuitButton_X" game "C2toDS_Hatchery_QuitButton_Y" 1 [] 1001 0
	pat: dull 4 "moe_C2toDS_Hatchery" 56 game "C2toDS_Hatchery_QuitButton_X" game "C2toDS_Hatchery_QuitButton_Y" 1


*part 5 - reset button
*pat: butt 5 "moe_C2toDS_Hatchery" 53 1 game "C2toDS_Hatchery_ResetButton_X" game "C2toDS_Hatchery_ResetButton_Y" 1 [] 1002 0
	pat: dull 5 "moe_C2toDS_Hatchery" 53 game "C2toDS_Hatchery_ResetButton_X" game "C2toDS_Hatchery_ResetButton_Y" 1


*set the currently highlighted egg to none by default			
	seta ov99 null


*find centre of screen (from Quit dialog)
	setv va90 wndw
	divv va90 2
	setv va91 wndh
	divv va91 2
	setv va92 wdth
	divv va92 2
	setv va93 hght
	divv va93 2

	subv va90 va92
	subv va91 va93

	flto va90 va91


*if it's the very first time the hatchery has been opened in this world, create the eggs for them
	doif game "C2toDS_Hatchery_OpenedForFirstTime" = 0

		call 1000 0 0

		setv game "C2toDS_Hatchery_OpenedForFirstTime" 1

	endi


*call the script to load any existing eggs
	call 1001 0 0

endm





*Raw Mouse Move script for hatchery

scrp 1 29 50200 75

	inst


	setv va60 posl
	setv va61 post


*subtract x and y of topleft of hatchery window from mouse coords to get mouse coords relative to the comp object
* range: 0-window size
	setv va50 _p1_
	setv va51 _p2_

	subv va50 va60
	subv va51 va61





*va00 is far left coord of title bar
	setv va00 game "C2toDS_Hatchery_QuitButton_X"
*va01 is far right coord of title bar
	setv va01 va00
	addv va01 game "C2toDS_Hatchery_QuitButton_Width"

*va02 is top coord of title bar
	setv va02 game "C2toDS_Hatchery_QuitButton_Y"
*va03 is bottom coord of title bar
	setv va03 va02
	addv va03 game "C2toDS_Hatchery_QuitButton_Height"


*target Quit Button part
	part 4

*if we're hovering over it...
	doif va50 > va00 and va50 < va01 and va51 > va02 and va51 < va03

*...set it to the hover pose
		pose 1

*if we're NOT hovering over it...
	else

*...set it back to default pose
		pose 0

	endi





*va00 is far left coord of title bar
	setv va00 game "C2toDS_Hatchery_ResetButton_X"
*va01 is far right coord of title bar
	setv va01 va00
	addv va01 game "C2toDS_Hatchery_ResetButton_Width"

*va02 is top coord of title bar
	setv va02 game "C2toDS_Hatchery_ResetButton_Y"
*va03 is bottom coord of title bar
	setv va03 va02
	addv va03 game "C2toDS_Hatchery_ResetButton_Height"


*target Reset Button part
	part 5

*if we're hovering over it...
	doif va50 > va00 and va50 < va01 and va51 > va02 and va51 < va03

*...set it to the hover pose
		pose 1

*if we're NOT hovering over it...
	else

*...set it back to default pose
		pose 0

	endi







*loop through all egg data objects to find out where the egg parts are!
	enum 1 29 50201

*egg positions
		setv va10 stoi ov01
*sprite is a bit too wide so make the bounding box 5 px less wide
		addv va10 5
*+ hatchery nest offset
		addv va10 game "C2toDS_Hatchery_Nest_X"

		setv va11 stoi ov02
*sprite is a bit too tall so make the bounding box 15 px taller
		addv va11 15
*+ hatchery nest offset
		addv va11 game "C2toDS_Hatchery_Nest_Y"

*va12 is egg x position + egg bounding box width (34px)
		setv va12 va10
		addv va12 34

*va13 is egg y position + egg bounding box height (53px)
		setv va13 va11
		addv va13 53

*mouse cursor is over the current egg we're looking at!
		doif va50 > va10 and va50 < va12 and va51 > va11 and va51 < va13

*whenever an egg ticks, it randomizes it's position a bit.
*every OTHER tick should look like the half framerate thing c2 has going on...
*it will count OV12 down to 0 and automatically disable the timer, to emulate them remaining excited for a bit.
			setv ov12 5
			tick 2

*also set ov13 to 1 - ov13 marks that the mouse is over this egg.
			setv ov13 1

**va14 is ov07 from current egg, aka egg sex!
*			setv va14 stoi ov07
*
*			targ ownr
*
**target egg sex/marker part
*			part 3
*
*			inst
*
**make sure it's invisible before doing anything
*			doif base = 4
*
**				1 - female
*				doif va14 = 1
*					base 21
**				2 - male
*				elif va14 = 2
*					base 37
**0 (and anything else) - random
*				else
*					base 5
*				endi
*
*				pat: move 3 va10 va11
*				anim [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 255]
*
*			endi

*mouse cursor WASNT over current egg
		else

*reset ov13 to 0 - ov13 marks that the mouse is over this egg.
			setv ov13 0

		endi

	next






*va20 starts at 0. if it's still 0 by the end of this next loop, hide the sex marker
	setv va20 0


*loop through all egg data objects AGAIN, this time to see if any are highlighted and work out which highlighted egg has the highest plane
	enum 1 29 50201



*ov13 marks that the mouse is over this egg.
		doif ov13 = 1
			setv va20 1

*VA21 stores the plane (Y pos) of the last hovered egg. if the new plane is higher (or equal), this egg takes precedence and becomes highlighted.
			doif stoi ov02 >= va21

*va14 is ov07 from current egg, aka egg sex!
				setv va14 stoi ov07


*egg positions
				setv va10 stoi ov01
*+ hatchery nest offset
				addv va10 game "C2toDS_Hatchery_Nest_X"

				setv va11 stoi ov02
*+ hatchery nest offset
				addv va11 game "C2toDS_Hatchery_Nest_Y"



				doif va14 = 1

*female sex marker X/Y offset
					addv va10 14
					subv va11 8

				elif va14 = 2

*male sex marker X/Y offset
					addv va10 10
					subv va11 6

				else

*random sex marker X/Y offset
					addv va10 8
					subv va11 12

				endi

			endi


*remember the current egg data object
			seta va99 targ

			setv va21 stoi ov02

		endi

	next


	targ ownr


	doif va20 = 0
		part 3
		base 4
		pose 0

*set the currently highlighted egg to none so we know not to create anything if we left click
		seta ov99 null
	else


*store the currently highlighted egg data object in the hatchery objects ov99 variable
		seta ov99 va99

*target egg sex/marker part
		part 3

		inst


*		1 - female
		doif va14 = 1
			base 21
*			anim []
*		2 - male
		elif va14 = 2
			base 37

*		0 (and anything else) - random
		else
			base 5
*			anim []
		endi

*set pose appropriate to new base
*		anim []

		pat: move 3 va10 va11

*		pose 0
*			anim [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 255]

*		doif pose < 15
*			setv va75 pose
*			addv va75 1
*			pose va75
*		else
*			setv va75 0
*			pose 0
*		endi

	endi

endm



*hatchery timer script, used to keep track of the frame number of the spinning sex symbol
*todo: is this really the best option :|
scrp 1 29 50200 9

	inst

	doif ov50 < 15
		addv ov50 1
	else
		setv ov50 0
	endi

*set the part to the appropriate pose, unless it's base 4 (hidden, no sex symbol)
	part 3

	setv va13 base

*	targ norn
*	sezz vtos va13
*	targ ownr

	part 3

	doif base > 4

*todo: why ov50. move it to a nicer number.
		pose ov50

	else

		base 4
		pose 0

	endi

endm












*TODO: improve
*load eggs script (big wip because it needs a hardcoded list at present)

scrp 1 29 50200 1000


	lock

	inst

*kill all existing eggs here to prevent conflicts
*todo: so probably remove the code elsewhere that kills all existing eggs
	enum 1 29 50201
		kill targ
	next






***************************
*      EGG VARIABLES      *
***************************
* OV00 - egg ID           *
* OV01 - egg initial X    *
* OV02 - egg initial Y    *
* OV03 - egg gallery      *
* OV04 - egg sprite index *
* OV05 - egg mum genome   *
* OV06 - egg dad genome   *
* OV07 - egg sex          *
* OV08 - NO LONGER USED         *
* OV09 - egg description  *
* OV10 - hatchery object  *
* OV11 - egg part number  * (on hatchery comp object)
*ov12 - how long until we reset the timer?
*ov13 - is this the highlighted egg?
*ov99 - filename associated with this egg (only used during egg loading loop)
***************************



**set egg initial X and Y to random numbers inside the hatchery nest bounding box
*setv ov01 rand 0 138
*setv ov02 rand 0 50
*
**set egg gallery to "eggs" (in future I'd like to support the Custom Egg Framework)
*sets ov03 "eggs"


*refill the hatchery if we ran out of eggs
*	doif totl 1 29 50201 = 0











	file glob 1 "*.c2egg"

*loop iteration counter
	setv va00 0

*check how many "*.c2egg" were found

*this line should work, but it doesn't read the entire line.
*setv va50 inni

*so we just read the whole line and convert that to a number instead.
	setv va50 stoi innl

*make an egg data holder object, use it to temporarily house an array.
*(we immediately destroy the object at the end of this script)
	new: simp 1 29 50201 "blnk" 1 0 0

*remember the object for later, we need to switch between new eggs and this object a few times.
	seta va99 targ

	reps va50

		sets va01 innl

*get length of globbed file string...	
		setv va02 strl va01

*globbed files start with ".", so we remove 11 (number of characters forward we are looking from va02 (number of characters to read in total))
*this stops it reading past the end of the string and causing an error.
		subv va02 11
*+1 because we need to read from AFTER that character.
		addv va02 1

*and then just return the last bit of the name such as "C2toDS_ChiChiNorn.c2egg"
		sets va01 subs va01 11 va02

*make an egg data holder object to act as a temporary member of an array.
*new: simp 1 29 50201 "blnk" 1 0 0
*this array contains the name string of every ".c2egg" file that needs to be loaded.
*sets ov99 va01

* first time round this sets "0" to va01
*second time round this sets "1" to va01
*etc
		sets name va00 va01

*+1 iteration count
		addv va00 1

	repe






*set loop iteration to 0
	setv va90 0





*and now run it backwards 
	reps va00

*target the object containing the array of egg filenames to load.
		targ va99

* first time this loop runs, check the variable with the name "0"
*second time this loop runs, check the variable with the name "1"
*etc
		file iope 1 name va90


*	file iope 1 "C2toDS_ChiChiNorn.c2egg"

*	doif va90 = 0
*		file iope 1 "C2toDS_GoldenDesertNorn_1.c2egg"
*	elif va90 = 1
*		file iope 1 "C2toDS_GoldenDesertNorn_2.c2egg"
*	elif va90 = 2
*		file iope 1 "C2toDS_GoldenDesertNorn_3.c2egg"
*	elif va90 = 3
*		file iope 1 "C2toDS_GoldenDesertNorn_4.c2egg"
*	endi


*		doif va90 = 0
*			file iope 1 "./C2toDS/Eggs/C2toDS_HebeNorn_F.c2egg"
*		elif va90 = 1
*			file iope 1 "./C2toDS/Eggs/C2toDS_HebeNorn_M.c2egg"
*		elif va90 = 2
*			file iope 1 "./C2toDS/Eggs/C2toDS_EmeraldNorn_F.c2egg"
*		elif va90 = 3
*			file iope 1 "./C2toDS/Eggs/C2toDS_EmeraldNorn_M.c2egg"
*		elif va90 = 4
*			file iope 1 "./C2toDS/Eggs/C2toDS_PixieNorn_F.c2egg"
*		elif va90 = 5
*			file iope 1 "./C2toDS/Eggs/C2toDS_PixieNorn_M.c2egg"
*		endi


*		file iope 1 "./Journal/C2toDS_EmeraldNorn_F.c2egg"

*	file iope 1 "C2toDS_EmeraldNorn_M.c2egg"

*todo: do something if you cant find it
*also do something if there are any missing keyvalues instead of infinite loop...

		new: simp 1 29 50201 "blnk" 1 0 0

*set egg ID to loop Iteration
		setv ov00 va90

*load in all the necessary egg data
		sets va35 "x:"
		gsub load_value_from_key_named_va35_into_string_va30
		sets ov01 va30

		sets va35 "y:"
		gsub load_value_from_key_named_va35_into_string_va30
		sets ov02 va30

*TEMPORARY RANDOMIZE X AND Y

*todo: disable this ofc
		setv ov01 rand 0 138
		setv ov02 rand 0 50
		sets ov01 vtos ov01
		sets ov02 vtos ov02


		sets va35 "gallery:"
		gsub load_value_from_key_named_va35_into_string_va30
		sets ov03 va30

		sets va35 "spriteindex:"
		gsub load_value_from_key_named_va35_into_string_va30
		sets ov04 va30

*TEMPORARY RANDOMIZE SPRITE INDEX

*	setv ov04 rand 0 10
*we multiply it later.
*	mulv ov04 8
*	sets ov04 vtos ov04


		sets va35 "mumgenome:"
		gsub load_value_from_key_named_va35_into_string_va30
		sets ov05 va30

		sets va35 "dadgenome:"
		gsub load_value_from_key_named_va35_into_string_va30
		sets ov06 va30


		sets va35 "sex:"
		gsub load_value_from_key_named_va35_into_string_va30
		sets ov07 va30


*TEMPORARY RANDOMIZE SEX

*	setv ov07 rand 0 2
*	sets ov07 vtos ov07

*	sets va35 "name:"
*	gsub load_value_from_key_named_va35_into_string_va30
*	sets ov08 va30

		sets va35 "description:"
		gsub load_value_from_key_named_va35_into_string_va30
		sets ov09 va30


*	untl inok = 0
		file iclo

*increase loop Iteration
		addv va90 1

	repe

*now that you've made a new: simp egg data holder from every file in the array object,
*we can safely kill it before the hatchery tries to read it as a real egg.
	kill va99

*	endi



*the subroutine that makes it happen!

	subr load_value_from_key_named_va35_into_string_va30

*init keyName string
		sets va01 ""

		loop
			sets va00 innl

			sets va02 lowa va00

			doif sins va02 1 va35 = -1
				adds va01 va00
			endi

		untl sins va02 1 va35 <> -1


*	setv va03 strl va02
*	subv va03 sins va02 1 "frame0: "

*	sets va99 subs va02 sins va02 1 "frame0: " va03


*read from position N (length of keyName string) (VA03) to the END OF STRING. calculated by subtracting VA03 from the length of the current string (VA02).
		setv va03 strl va35
*this way off by 1 and we were reading the first pixel with as ":10" instead of "10"
		addv va03 1
		setv va04 strl va02
		subv va04 va03


*new fix, todo, might be dodgy. stops it cutting off the last character of eggs...
		addv va04 1

*  	vvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
		sets va30 subs va02 va03 va04
*  	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

	retn




endm





scrp 1 29 50200 1001

	lock

	inst

*do a loop to kill all the egg parts
	setv va00 -1
	loop

		setv va00 pnxt va00

*don't delete part -1 and don't delete non-egg parts!
		doif va00 <> -1 and va00 >= 6
			pat: kill va00
		endi

*setv va00 va01

	untl va00 = -1


*part numbers for eggs, starting at 6
	setv va00 6

*we'll need to re-target the main hatchery comp object in a moment
	seta va99 targ

	enum 1 29 50201

*we'll need to re-target the current egg data we're looking at in a moment
		seta va98 targ

***************************
*      EGG VARIABLES      *
***************************
* OV00 - egg ID           *
* OV01 - egg initial X    *
* OV02 - egg initial Y    *
* OV03 - egg gallery      *
* OV04 - egg sprite index *
* OV05 - egg mum genome   *
* OV06 - egg dad genome   *
* OV07 - egg sex          *
* OV08 - egg name         *
* OV09 - egg description  *
* OV10 - hatchery object  *
* OV11 - egg part number  * (on hatchery comp object)

*ov12 - egg rustle timer
*ov13 - is egg highlighted?
***************************

		setv va20 ov00
		setv va21 stoi ov01
		setv va22 stoi ov02

*va30 is a copy of va22 but without the Y offset added. it's used for an automatic plane between 0 and 50.
		setv va30 va22

*va31 is the same as above but -1. it's used for the egg shadow.
		setv va31 va30
		subv va31 va30

*add coords of topleft of hatchery nest bounding box to XY coords of egg
		addv va21 game "C2toDS_Hatchery_Nest_X"
		addv va22 game "C2toDS_Hatchery_Nest_Y"

		sets va23 ov03
		setv va24 stoi ov04

*multiply it by 8 to find the first egg image for the index number.
		mulv va24 8

*add 2 to find third stage of growth.
		addv va24 2

		sets va25 ov05
		sets va26 ov06
		setv va27 stoi ov07
*	sets va28 ov08
		sets va29 ov09


*and now feed in some new info for the egg data object to remember:

*hatchery object id:
		seta ov10 va99
*egg part number on hatchery object:
		setv ov11 va00

		targ va99

*part N - EGG SPRITE
		pat: dull va00 va23 va24 va21 va22 va30

*adjust X/Y offset of shadow
		addv va21 game "C2toDS_Hatchery_EggShadow_OffsetX"
		addv va22 game "C2toDS_Hatchery_EggShadow_OffsetY"

*part N+1 - EGG SHADOW
		setv va01 va00
		addv va01 1
		pat: dull va01 "moe_C2toDS_Hatchery" 3 va21 va22 va31

*set shadow to 25% opacity
		part va01
		alph 192 1

*+2 iteration counter
		addv va00 2

	next







**iteration counter
*setv va00 0
*
*reps 6
*
**select egg sprite
*	setv va60 rand 0 10
*	mulv va60 8
*
**add 2 to find third stage of growth.		
*	addv va60 2
*
**randomize coords
*	setv va50 rand 0 50
*	setv va51 rand 0 138
*
**add coords of topleft of hatchery nest bounding box
*	addv va50 game "C2toDS_Hatchery_Nest_X"
*	addv va51 game "C2toDS_Hatchery_Nest_Y"
*
**part N - EGG SPRITE
*	pat: dull va00 "eggs" va60 0 0 50
*
**part N+1 - EGG SHADOW
*	setv va01 va00
*	addv va01 1
*	pat: dull va01 "moe_C2toDS_Hatchery" 1 3 va50 va51
*
**part N+2 - EGG SEX SYMBOL
*	setv va01 va00
*	addv va01 2
*	pat: dull va01 "moe_C2toDS_Hatchery" 16 4 va50 va51
*
*
**+2 iteration counter
*	addv va00 2
*
*repe


*		inst
*		new: simp 3 4 1 "eggs" 8 va60 0

endm






*Raw Mouse Down script for hatchery

scrp 1 29 50200 76

	lock

	inst

*
*
*game "C2toDS_Hatchery_TitleBar_Y"
*
*game "C2toDS_Hatchery_TitleBar_Height"
*
*game "C2toDS_Hatchery_QuitButton_X"
*game "C2toDS_Hatchery_QuitButton_Y"
*game "C2toDS_Hatchery_QuitButton_Width"
*game "C2toDS_Hatchery_QuitButton_Height"
*
*game "C2toDS_Hatchery_ResetButton_X"
*game "C2toDS_Hatchery_ResetButton_Y"
*game "C2toDS_Hatchery_ResetButton_Width"
*game "C2toDS_Hatchery_ResetButton_Height"



*TODO: it needs to attempt to grab the higlighted egg again right HERE instead, tbh. it often doesnt add an egg when it definitely should.

*left mouse button only
	doif _p1_ = 1


*get hatchery window coords
		setv va60 posl
		setv va61 post

*get pointer coords
		targ pntr

		setv va50 posl
		setv va51 post

*subtract hatchery top left position to get correct pointer coords
		subv va50 va60
		subv va51 va61

		targ ownr




*va00 is far left coord of title bar
		setv va00 game "C2toDS_Hatchery_QuitButton_X"
*va01 is far right coord of title bar
		setv va01 va00
		addv va01 game "C2toDS_Hatchery_QuitButton_Width"

*va02 is top coord of title bar
		setv va02 game "C2toDS_Hatchery_QuitButton_Y"
*va03 is bottom coord of title bar
		setv va03 va02
		addv va03 game "C2toDS_Hatchery_QuitButton_Height"


*target Quit Button part
		part 4

*if we're hovering over it...
		doif va50 > va00 and va50 < va01 and va51 > va02 and va51 < va03

*...set it to the pressed pose, wait a split second, then kill the hatchery window
			pose 2
			wait 2
			kill targ

		endi





*va00 is far left coord of reset button
		setv va00 game "C2toDS_Hatchery_ResetButton_X"
*va01 is far right coord of reset button
		setv va01 va00
		addv va01 game "C2toDS_Hatchery_ResetButton_Width"

*va02 is top coord of reset button
		setv va02 game "C2toDS_Hatchery_ResetButton_Y"
*va03 is bottom coord of reset button
		setv va03 va02
		addv va03 game "C2toDS_Hatchery_ResetButton_Height"


*target Reset Button part
		part 5

*if we're hovering over it...
		doif va50 > va00 and va50 < va01 and va51 > va02 and va51 < va03

*...set it to the pressed pose, wait a split second, reset the pose...
			pose 2
			wait 2
			pose 0

*delete all egg data holders
			enum 1 29 50201
				kill targ
			next

*call the script to create all the offscreen eggs, then call the script to load all those eggs
			call 1000 0 0
			call 1001 0 0


		endi





*va00 is far left coord of title bar
		setv va00 game "C2toDS_Hatchery_TitleBar_X"
*va01 is far right coord of title bar
		setv va01 va00
		addv va01 game "C2toDS_Hatchery_TitleBar_Width"

*va02 is top coord of title bar
		setv va02 game "C2toDS_Hatchery_TitleBar_Y"
*va03 is bottom coord of title bar
		setv va03 va02
		addv va03 game "C2toDS_Hatchery_TitleBar_Height"



		doif va50 > va00 and va50 < va01 and va51 > va02 and va51 < va03


*todo: copy pasting code not working/needed
*fix for dropdowns opening up again immediately when trying to exit them by pressing the main button again.
*			doif ov07 = 1
*				setv ov07 0
*				stop
*			endi
*
*			setv ov07 1


			inst

*get the pointer position
			targ pntr

			setv va00 posl
			setv va01 post

*subtract the position of the window to get screen coords
			targ ownr

			subv va00 posl
			subv va01 post

*invert the values to get values flto can make use of
			negv va00
			negv va01

*set window to float under cursor
			frel pntr

			flto va00 va01

*	attr 32


*todo: delete unnecessary code
*listen for Raw Mouse Move and Raw Mouse Down inputs (12)
*AND for mouse up/unpress events (+16)
*imsk 28



		endi




*if there is a highlighted egg stored, create it!

*TODO: BUG!! IT IS MEANT TO BE THE HIGHLIGHTED EGG WITH THE HIGHEST PLANE, BUT I THINK IT'S JUST USING WHICHEVER HIGHLIGHTED EGG LOADED LAST!
		doif ov99 <> null
*			targ norn
*			sezz "yep egg was higlighted"

*			enum 1 99 9700
*				kill targ
*			next

			targ ov99

*get egg id (used to determine where in front of the incubator it appears)
			setv va00 ov00

*get egg gallery
			sets va03 ov03

*get egg sprite index
			setv va04 stoi ov04

*multiply it by 8 to get the correct egg sprite index
			mulv va04 8

*get genome
			sets va05 ov05

*get sex
			setv va07 stoi ov07

*get egg part number
			setv va11 ov11

*make an EGG
			inst
			new: simp 3 4 1 va03 0 va04 0
			puhl 0 15 45
			puhl 1 15 35
			puhl 2 15 25
			puhl 3 15 10
			puhl 4 15 10
			puhl 5 15 10

			emit 11 0.65

**			gene move targ 1 ownr 1
*
*
**		if this is virgin birth then do this
*			doif va99 ne "crossing"
*				gene load targ 1 va99
*			else
**		otherwise need to cross and move the genome
*				gene cros targ 1 from 9 from 10 5 5 5 5
*			endi

*load in the correct genome hooray!!
			gene load targ 1 va05

*TODO: WHAT ABOUT THE DAD!

*SEX!!!
*1 for male, 2 for female or 0 for random

*			female
			doif va07 = 1
				setv ov01 2
*			male
			elif va07 = 2
				setv ov01 1
*			random
			else
				setv ov01 0
			endi


			elas 10
			fric rand 10 40
			attr 195
			bhvr 32
			aero 10
			accg 4
			perm 60
*starts fully grown
			pose 3

*		seta va01 targ
*
*		targ va00
*		plne 6000
*		anim [0 1 2 3 4]
*		over
*
*		targ va01
*		mvto 8357 49720
*
*		targ va00
*		anim [5 5 5 5 5 4 3 2 1 0]
*		over
*		plne 10
*
*		targ va01


			tick 900

*bioenergy
			setv ov61 100


*get X coord. eggs start at 6948, 30 px between each egg
			mulv va00 30
			addv va00 6948

			mvto va00 48367

*todo: maybe camera should be offset a bit like in C2. idk
			cmrt 0

*a fix for a rare edge case when importing an egg while hovering over a different egg
			enum 1 29 50201
				stpc
				tick 0
			next

*kill the selected egg so it won't be there next time we load the hatchery!
			targ ownr
			targ ov99
			kill targ

*kill the hatchery itself
			targ ownr

*kill the egg and it's shadow
			pat: kill va11
			addv va11 1
			pat: kill va11

*wait a split second for dramatic effect, then kill the whole hatchery
			wait 2

			kill targ

*TODO: target toolbar object and unpress hatchery.

*		else
*			targ norn
*			sezz "nope no egg"
		endi

	endi

endm






*raw mouse up script

scrp 1 29 50200 77

	lock

*if left mouse button is unpressed
	doif _p1_ = 1

		inst

*		attr 0
		setv va00 posl
		setv va01 post

*		attr 304

*convert to screen space coords by subtracting window left and top from object left and top.
		subv va00 wndl
		subv va01 wndt

		frel null

		flto va00 va01

	endi

endm





*raw key down script

scrp 1 29 50200 73

	lock

	targ norn
	sezz vtos _p1_
	targ ownr

*if left mouse button is unpressed
	doif _p1_ = 1

		inst

*		attr 0
		setv va00 posl
		setv va01 post

*		attr 304

*convert to screen space coords by subtracting window left and top from object left and top.
		subv va00 wndl
		subv va01 wndt

		frel null

		flto va00 va01

	endi

endm





*timer script for egg data holder. used to make eggs rustle.

scrp 1 29 50201 9


	inst

*put part number of egg in va20
	setv va20 ov11

*store egg initial x and y positions in va21 and va22
	setv va21 stoi ov01
	setv va22 stoi ov02

*+ hatchery nest offset
	addv va21 game "C2toDS_Hatchery_Nest_X"
*+ hatchery nest offset 
	addv va22 game "C2toDS_Hatchery_Nest_Y"


*OV12 is used to keep track of how long you've been animating. disable the timer if it reaches 0.
	subv ov12 1

	doif ov12 = 0
		tick 0
*randomize position a lil but only if we're still randomizing
	else

*todo: so it should take into account its current position before the randomization somehow.
*because otherwise it can jump from its furthest left to furthest right pos and misses the middle one,
*so it doesnt seem as nice and smooth as the c2 hatchery.
		addv va21 rand -1 1
		addv va22 rand -1 1
	endi

*target hatchery object
	targ ov10

	doif targ <> null


		doif part va20 = 1
			pat: move va20 va21 va22
		endi

*also move the shadow (part number is egg part number+1)
		addv va20 1

*adjust X/Y offset of shadow
		addv va21 game "C2toDS_Hatchery_EggShadow_OffsetX"
		addv va22 game "C2toDS_Hatchery_EggShadow_OffsetY"

		doif part va20 = 1
			pat: move va20 va21 va22
		endi

	else
		targ ownr
		tick 0
	endi

endm



*see ya

rscr

enum 1 29 50200
	kill targ
next

enum 1 29 50201
	kill targ
next